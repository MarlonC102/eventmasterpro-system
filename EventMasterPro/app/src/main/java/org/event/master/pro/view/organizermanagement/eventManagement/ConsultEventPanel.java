/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.event.master.pro.view.organizermanagement.eventManagement;

import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import org.event.master.pro.event.Event.Event;
import org.event.master.pro.event.Event.EventDAO;
import org.event.master.pro.event.ticket.Ticket;
import org.event.master.pro.person.account.Account;
import org.event.master.pro.person.artist.Artist;
import static org.event.master.pro.util.ShowPanelUtil.*;
import org.event.master.pro.util.UIUtil;

/**
 *
 * @author Luisa
 */
public class ConsultEventPanel extends javax.swing.JPanel {
    Account account = new Account();
    EventDAO edao = new EventDAO();
    private final JFrame container;
    private int event;
    private String type;

    /**
     * Creates new form EventListPanel
     */
    public ConsultEventPanel(JFrame container, int event, String type) throws SQLException {
        initComponents();
        this.container = container;
        this.event = event;
        eventData(event);
        disableAll();
        propertiePlaceHolder();
        finance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        eventClassification = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        eventName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        eventDuration = new javax.swing.JTextField();
        eventSponsor = new javax.swing.JTextField();
        eventDurationTitle = new javax.swing.JLabel();
        dateTimePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        eventType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        eventQuorum = new javax.swing.JTextField();
        eventLocation = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        principalArtist = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        invitedArtist = new javax.swing.JTextField();
        ticketEvent = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventDescription = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        viewFinanceButton = new javax.swing.JButton();
        eventStatistics = new javax.swing.JButton();

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        eventClassification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A (All audiences)", "B (With adult accompaniment)", "+12 (Over 12 years old)", "+15 (Over 15 years old)", "+18 (Adults only)" }));
        eventClassification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventClassificationActionPerformed(evt);
            }
        });

        jLabel3.setText("Date");

        jLabel8.setText("Classification");

        jLabel10.setText("Quorum");

        eventSponsor.setPreferredSize(null);
        eventSponsor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventSponsorActionPerformed(evt);
            }
        });

        jLabel9.setText("Name");

        jLabel6.setText("Sponsor");

        jLabel2.setText("Event Type");

        eventType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Concert", "Conference", "Festival" }));
        eventType.setMinimumSize(new java.awt.Dimension(64, 22));
        eventType.setPreferredSize(new java.awt.Dimension(64, 22));
        eventType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventTypeActionPerformed(evt);
            }
        });

        jLabel7.setText("Location");

        eventQuorum.setPreferredSize(new java.awt.Dimension(143, 22));
        eventQuorum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventQuorumActionPerformed(evt);
            }
        });

        eventLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventLocationActionPerformed(evt);
            }
        });

        jLabel12.setText("Description");

        jLabel11.setText("Principal Artist");

        principalArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principalArtistActionPerformed(evt);
            }
        });

        jLabel14.setText("Invited Artists");

        jLabel1.setText("Tickets");

        jScrollPane1.setViewportView(eventDescription);

        jLabel4.setText("Event Information");

        viewFinanceButton.setText("View Finance");
        viewFinanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFinanceButtonActionPerformed(evt);
            }
        });

        eventStatistics.setText("Statistics");
        eventStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventStatisticsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eventStatistics)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewFinanceButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(25, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventDurationTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventClassification, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventSponsor, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventQuorum, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invitedArtist, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(eventType, 0, 300, Short.MAX_VALUE)
                            .addComponent(principalArtist, 0, 300, Short.MAX_VALUE)
                            .addComponent(eventLocation, 0, 300, Short.MAX_VALUE)
                            .addComponent(ticketEvent, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {eventDurationTitle, jLabel1, jLabel10, jLabel11, jLabel12, jLabel14, jLabel2, jLabel3, jLabel6, jLabel7, jLabel8, jLabel9});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dateTimePicker, eventClassification, eventDuration, eventLocation, eventName, eventQuorum, eventSponsor, eventType, invitedArtist, principalArtist, ticketEvent});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(viewFinanceButton)
                    .addComponent(eventStatistics))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventType, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventSponsor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(principalArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventClassification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ticketEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eventQuorum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eventDurationTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eventDuration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(invitedArtist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        showListEventPanel(container);
    }//GEN-LAST:event_okButtonActionPerformed

    private void eventClassificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventClassificationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventClassificationActionPerformed

    private void eventQuorumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventQuorumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventQuorumActionPerformed

    private void eventLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventLocationActionPerformed

    }//GEN-LAST:event_eventLocationActionPerformed

    private void eventTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventTypeActionPerformed

    private void principalArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principalArtistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_principalArtistActionPerformed

    private void eventSponsorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventSponsorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventSponsorActionPerformed

    private void viewFinanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFinanceButtonActionPerformed
        showEventFinance(container, event);
    }//GEN-LAST:event_viewFinanceButtonActionPerformed

    private void eventStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventStatisticsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventStatisticsActionPerformed

    public void propertiePlaceHolder() {
        UIUtil.propertiesText(eventName, Color.WHITE);
        UIUtil.propertiesText(dateTimePicker, Color.WHITE);
        UIUtil.propertiesText(eventSponsor, Color.WHITE);
        UIUtil.propertiesText(eventClassification, Color.WHITE);
        UIUtil.propertiesText(principalArtist, Color.WHITE);
        UIUtil.propertiesText(eventQuorum, Color.WHITE);
        UIUtil.propertiesText(eventDuration, Color.WHITE);
        UIUtil.propertiesText(eventType, Color.WHITE);
        UIUtil.propertiesText(eventLocation, Color.WHITE);
        UIUtil.propertiesText(eventDescription, Color.WHITE);
        UIUtil.propertiesText(ticketEvent, Color.WHITE);
        UIUtil.propertiesText(invitedArtist, Color.WHITE);
    }

    public void concertData(int c) throws SQLException {
        List<Artist> invited;
        List<Ticket> ticket;
        System.out.println("id "+c);
        Event event = edao.consultEventById(c);
        type = event.getType();
        eventName.setText(event.getName());
        dateTimePicker.setDateTimePermissive(event.getDateTimeEvent());
        eventSponsor.setText(event.getSponsor());
        eventClassification.setSelectedItem(event.getClassification());
        principalArtist.addItem(event.getArtist().getArtisticName());
        eventQuorum.setText(String.valueOf(event.getParticipantsNumbers()));
        eventDuration.setText(String.valueOf(event.getDuration()));
        eventType.setSelectedItem(event.getType());
        eventLocation.addItem(event.getLocation().getName());
        eventDescription.setText(event.getDescription());
        eventDurationTitle.setText("Concert duration in hours");
        invited = event.getInvitedArtist();
        ticket = event.getTickets();
        ticketData(ticket);
        invitedArtistData(invited);

    }

    public void invitedArtistData(List<Artist> invited) {
        List<String> art = new ArrayList<>();
        for (Artist artist : invited) {
            if (artist != null) {
                art.add(artist.getName());
            }
        }
        if (invited != null && !invited.isEmpty()) {
            invitedArtist.setText(String.join(", ", art));
        } else {
            invitedArtist.setText("Without guest artists.");
        }
    }
    
    public void finance(){
        if (!account.getRol().equals("counter")) {
            viewFinanceButton.setVisible(false);
        }
    }
    
    public void ticketData(List<Ticket> ticket){
        List<String> listTicket = new ArrayList<>();
        for (Ticket t : ticket) {
            if (ticket != null) {
                listTicket.add("Zone: " + t.getZone() + ", quantity: " + t.getSeatNumber());
            }
        }
        if (ticket != null && !ticket.isEmpty()) {
            ticketEvent.setText(String.join("\n", listTicket));
        } else {
            ticketEvent.setText("Tickets not found.");
        }
    }
    public void eventData(int eventId) throws SQLException {
        concertData(eventId);

//        switch (type) {
//        case "Concert" -> {
//            ConcertDAO cdao = new ConcertDAO();
//            Concert concert = cdao.consultConcertById(ev.getIdEvent());
//            TicketDAO tdao = new TicketDAO();
//            List<Ticket> tickets = tdao.ticketByEvent(ev.getIdEvent());
//            if (concert.getArtist() != null) {
//                principalArtist.setSelectedItem(concert.getArtist().getName());
//            } else {
//                principalArtist.setSelectedItem("No artist");
//            }
//            if (concert.getInvitedArtist() != null && !concert.getInvitedArtist().isEmpty()) {
//                StringBuilder sb = new StringBuilder();
//                for (Artist a : concert.getInvitedArtist()) {
//                    sb.append(a.getName()).append("\n");
//                }
//                invitedArtist.setText(sb.toString());
//            } else {
//                invitedArtist.setText("No invited artists");
//            }
//            if (tickets != null && !tickets.isEmpty()) {
//                ticketEvent.setText("Total tickets: " + tickets.size());
//            } else {
//                ticketEvent.setText("No tickets");
//            }
//        }
//
//    }
    }

    public void disableAll() {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker;
    private javax.swing.JComboBox<String> eventClassification;
    private javax.swing.JTextPane eventDescription;
    private javax.swing.JTextField eventDuration;
    private javax.swing.JLabel eventDurationTitle;
    private javax.swing.JComboBox<String> eventLocation;
    private javax.swing.JTextField eventName;
    private javax.swing.JTextField eventQuorum;
    private javax.swing.JTextField eventSponsor;
    private javax.swing.JButton eventStatistics;
    private javax.swing.JComboBox<String> eventType;
    private javax.swing.JTextField invitedArtist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<String> principalArtist;
    private javax.swing.JTextField ticketEvent;
    private javax.swing.JButton viewFinanceButton;
    // End of variables declaration//GEN-END:variables
}
