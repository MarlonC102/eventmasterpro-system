/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.event.master.pro.view.organizermanagement.event;

import java.sql.SQLException;
import java.util.List;
import javax.swing.JFrame;
import org.event.master.pro.event.Concert.Concert;
import org.event.master.pro.event.Concert.ConcertDAO;
import org.event.master.pro.event.Event.Event;
import org.event.master.pro.event.ticket.Ticket;
import org.event.master.pro.event.ticket.TicketDAO;
import org.event.master.pro.person.artist.Artist;

/**
 *
 * @author Luisa
 */
public class ConsultEventPanel extends javax.swing.JPanel {
    private final JFrame container;
    private Event event;
    /**
     * Creates new form EventListPanel
     */
    public ConsultEventPanel(JFrame container, Event event) {
        initComponents();
        this.container = container;
        this.event = event;
        eventData();
        disableAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        eventClassification = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        eventName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        eventDuration = new javax.swing.JTextField();
        eventSponsor = new javax.swing.JTextField();
        eventDurationTitle = new javax.swing.JLabel();
        dateTimePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        eventType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        eventQuorum = new javax.swing.JTextField();
        eventLocation = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        eventDescription = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        principalArtist = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        invitedArtist = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        ticketEvent = new javax.swing.JTextPane();

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        eventClassification.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A (All audiences)", "B (With adult accompaniment)", "+12 (Over 12 years old)", "+15 (Over 15 years old)", "+18 (Adults only)" }));
        eventClassification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventClassificationActionPerformed(evt);
            }
        });

        jLabel3.setText("Date");

        jLabel8.setText("Classification");

        jLabel10.setText("Quorum");

        eventSponsor.setPreferredSize(null);

        jLabel9.setText("Name");

        jLabel6.setText("Sponsor");

        jLabel2.setText("Event Type");

        eventType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Concert", "Conference", "Festival" }));
        eventType.setMinimumSize(new java.awt.Dimension(64, 22));
        eventType.setPreferredSize(new java.awt.Dimension(64, 22));
        eventType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventTypeActionPerformed(evt);
            }
        });

        jLabel7.setText("Location");

        eventQuorum.setPreferredSize(new java.awt.Dimension(143, 22));
        eventQuorum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventQuorumActionPerformed(evt);
            }
        });

        eventLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventLocationActionPerformed(evt);
            }
        });

        jLabel12.setText("Description");

        jLabel11.setText("Principal Artist");

        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Events");
        title.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        principalArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principalArtistActionPerformed(evt);
            }
        });

        jLabel14.setText("Invited Artists");

        jLabel1.setText("Tickets");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(170, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eventDurationTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateTimePicker, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(eventClassification, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eventDuration)
                    .addComponent(eventName)
                    .addComponent(eventSponsor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eventQuorum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(invitedArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ticketEvent, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(264, 264, 264)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eventType, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(principalArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton)
                .addGap(316, 316, 316))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eventType, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(dateTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(eventLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(eventSponsor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(principalArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel12)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(156, 156, 156)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eventClassification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eventDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eventQuorum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ticketEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eventDurationTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invitedArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventDuration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        

    }//GEN-LAST:event_okButtonActionPerformed

    private void eventClassificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventClassificationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventClassificationActionPerformed

    private void eventQuorumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventQuorumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventQuorumActionPerformed

    private void eventLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventLocationActionPerformed

    }//GEN-LAST:event_eventLocationActionPerformed

    private void principalArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principalArtistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_principalArtistActionPerformed

    private void eventTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventTypeActionPerformed

    public void eventData(){
        eventName.setText(event.getName());
        dateTimePicker.setDateTimePermissive(event.getDateTimeEvent());
        eventSponsor.setText(event.getSponsor());
        eventClassification.setSelectedItem(event.getClassification());
        eventQuorum.setText(String.valueOf(event.getParticipantsNumbers()));
        eventDuration.setText(String.valueOf(event.getDuration()));
        eventType.setSelectedItem(event.getType());
        eventLocation.setSelectedItem(event.getLocation().getName());
        eventDescription.setText(event.getDescription());
        switch (event.getType()) {
        case "Concert" -> {
            try{
                ConcertDAO cdao = new ConcertDAO();
                Concert concert = cdao.consultConcertById(event.getIdEvent());
                TicketDAO tdao = new TicketDAO();
                List<Ticket> tickets = tdao.ticketByEvent(event.getIdEvent());

                if (concert.getArtist() != null) {
                    principalArtist.setSelectedItem(concert.getArtist().getName());
                } else {
                    principalArtist.setSelectedItem("No artist");
                }
                if (concert.getInvitedArtist() != null && !concert.getInvitedArtist().isEmpty()) {
                    StringBuilder sb = new StringBuilder();
                    for (Artist a : concert.getInvitedArtist()) {
                        sb.append(a.getName()).append("\n");
                    }
                    invitedArtist.setText(sb.toString());
                } else {
                    invitedArtist.setText("No invited artists");
                }
                if (tickets != null && !tickets.isEmpty()) {
                    ticketEvent.setText("Total tickets: " + tickets.size());
                } else {
                    ticketEvent.setText("No tickets");
                }
                 
            }catch (SQLException e) {
            e.printStackTrace();
            principalArtist.setSelectedItem("Error loading artist");
            invitedArtist.setText("Error loading artists");
            ticketEvent.setText("Error loading tickets");
            }
        }
    }
}
    public void disableAll(){}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker;
    private javax.swing.JComboBox<String> eventClassification;
    private javax.swing.JTextPane eventDescription;
    private javax.swing.JTextField eventDuration;
    private javax.swing.JLabel eventDurationTitle;
    private javax.swing.JComboBox<String> eventLocation;
    private javax.swing.JTextField eventName;
    private javax.swing.JTextField eventQuorum;
    private javax.swing.JTextField eventSponsor;
    private javax.swing.JComboBox<String> eventType;
    private javax.swing.JTextPane invitedArtist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<String> principalArtist;
    private javax.swing.JTextPane ticketEvent;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
