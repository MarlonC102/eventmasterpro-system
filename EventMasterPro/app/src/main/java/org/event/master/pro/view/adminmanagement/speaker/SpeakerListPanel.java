/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.event.master.pro.view.adminmanagement.speaker;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.event.master.pro.person.account.Account;
import org.event.master.pro.person.speaker.Speaker;
import org.event.master.pro.person.speaker.SpeakerDAO;
import org.event.master.pro.util.FormatUtil;
import static org.event.master.pro.util.ShowPanelUtil.*;
import org.event.master.pro.util.UIUtil;


/**
 *
 * @author Luisa
 */
public class SpeakerListPanel extends javax.swing.JPanel {
    SpeakerDAO speaker = new SpeakerDAO();
    private final JFrame container;
    Account account = new Account();
    /**
     * Creates new form SpeakerListPanel
     */
    public SpeakerListPanel(JFrame container) {
        initComponents();
        this.container = container;
        jScrollPane1.getViewport().setBackground(UIManager.getColor("Table.background"));
        tableSpeaker();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        speakerTable = new javax.swing.JTable();

        speakerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Document", "Speaker", "Speciality", "Price", "Availability", "See", "Edit", "Delete"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(speakerTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableSpeaker(){
        List<Speaker> speakers = speaker.consultSpeaker();
        DefaultTableModel modelTableArtist = (DefaultTableModel) speakerTable.getModel();
        for (Speaker s : speakers) {
            Object document = s.getDocumenNumber();
            modelTableArtist.addRow(new Object[]{document, s.getName(), s.getSpeciality(), FormatUtil.formatNumber(s.getPrice()) , s.isAvailability(), "See", "Edit","Delete"});
        }
        //UIUtil.hideButtons(account.getRol(), speakerTable);
        buttonsEvent();
    }
    
    //Eventos para los botones Edit y Delete ya que fueron elementos a√±adidos manualmente a la tabla
    private void buttonsEvent(){
        speakerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = speakerTable.rowAtPoint(evt.getPoint());
                int column = speakerTable.columnAtPoint(evt.getPoint());
                String document = speakerTable.getValueAt(row, 0).toString();
                if (column == speakerTable.getColumnModel().getColumnIndex("Edit")) {
                    showEditSpeakerPanel(container, document);
                } else if (column == speakerTable.getColumnModel().getColumnIndex("Delete")) {
                    int confirmado = JOptionPane.showConfirmDialog(
                    null,
                    "Are you sure you want to delete the speaker?",
                    "Confirm",
                    JOptionPane.YES_NO_OPTION
                );
                if (confirmado == JOptionPane.YES_OPTION) {
                    speaker.changeStatusSpeaker(document);
                    showListSpeakerPanel(container);
                }
                } else if(column == speakerTable.getColumnModel().getColumnIndex("See")){
                    showSeeSpeakerPanel(container, document);
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable speakerTable;
    // End of variables declaration//GEN-END:variables
}
